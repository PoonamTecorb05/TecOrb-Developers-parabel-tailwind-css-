{"ast":null,"code":"import $ from '../../shared/dom.js';\nexport default function Parallax(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  };\n  const setTranslate = () => {\n    const {\n      $el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(el => {\n      setTransform(el, progress);\n    });\n    slides.each((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(el => {\n        setTransform(el, slideProgress);\n      });\n    });\n  };\n  const setTransition = function () {\n    let duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : swiper.params.speed;\n    const {\n      $el\n    } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(parallaxEl => {\n      const $parallaxEl = $(parallaxEl);\n      let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      $parallaxEl.transition(parallaxDuration);\n    });\n  };\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}","map":{"version":3,"names":["$","Parallax","swiper","extendParams","on","parallax","enabled","setTransform","el","progress","rtl","$el","rtlFactor","p","attr","x","y","scale","opacity","isHorizontal","indexOf","parseInt","currentOpacity","Math","abs","style","transform","currentScale","setTranslate","slides","snapGrid","children","each","slideEl","slideIndex","slideProgress","params","slidesPerGroup","slidesPerView","ceil","length","min","max","find","setTransition","duration","speed","parallaxEl","$parallaxEl","parallaxDuration","transition","watchSlidesProgress","originalParams","_swiper"],"sources":["/home/tecorb/Desktop/project/tailwind-css-project/parabel/node_modules/swiper/modules/parallax/parallax.js"],"sourcesContent":["import $ from '../../shared/dom.js';\nexport default function Parallax({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      $el[0].style.opacity = currentOpacity;\n    }\n\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  };\n\n  const setTranslate = () => {\n    const {\n      $el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(el => {\n      setTransform(el, progress);\n    });\n    slides.each((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(el => {\n        setTransform(el, slideProgress);\n      });\n    });\n  };\n\n  const setTransition = (duration = swiper.params.speed) => {\n    const {\n      $el\n    } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(parallaxEl => {\n      const $parallaxEl = $(parallaxEl);\n      let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      $parallaxEl.transition(parallaxDuration);\n    });\n  };\n\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}