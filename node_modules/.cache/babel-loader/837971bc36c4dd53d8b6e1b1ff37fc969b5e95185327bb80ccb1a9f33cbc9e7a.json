{"ast":null,"code":"import $ from '../../shared/dom.js';\nimport createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nexport default function EffectFlip(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n      transformEl: null\n    }\n  });\n  const createSlideShadows = ($slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n    if (shadowBefore.length === 0) {\n      shadowBefore = createShadow(params, $slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n    if (shadowAfter.length === 0) {\n      shadowAfter = createShadow(params, $slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n    if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n    if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.each(slideEl => {\n      const $slideEl = $(slideEl);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      createSlideShadows($slideEl, progress, params);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n      if (params.slideShadows) {\n        createSlideShadows($slideEl, progress, params);\n      }\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(transform);\n    }\n  };\n  const setTransition = duration => {\n    const {\n      transformEl\n    } = swiper.params.flipEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformEl\n    });\n  };\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","map":{"version":3,"names":["$","createShadow","effectInit","effectTarget","effectVirtualTransitionEnd","EffectFlip","swiper","extendParams","on","flipEffect","slideShadows","limitRotation","transformEl","createSlideShadows","$slideEl","progress","params","shadowBefore","isHorizontal","find","shadowAfter","length","style","opacity","Math","max","recreateShadows","slides","each","slideEl","min","setTranslate","rtlTranslate","rtl","i","eq","offset","swiperSlideOffset","rotate","rotateY","rotateX","tx","cssMode","translate","ty","zIndex","abs","round","transform","$targetEl","setTransition","duration","$transitionElements","transition","effect","getEffectParams","perspective","overwriteParams","slidesPerView","slidesPerGroup","watchSlidesProgress","spaceBetween","virtualTranslate"],"sources":["/home/tecorb/Desktop/project/tailwind-css-project/parabel/node_modules/swiper/modules/effect-flip/effect-flip.js"],"sourcesContent":["import $ from '../../shared/dom.js';\nimport createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nexport default function EffectFlip({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n      transformEl: null\n    }\n  });\n\n  const createSlideShadows = ($slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n    if (shadowBefore.length === 0) {\n      shadowBefore = createShadow(params, $slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n\n    if (shadowAfter.length === 0) {\n      shadowAfter = createShadow(params, $slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n\n    if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n    if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n  };\n\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.each(slideEl => {\n      const $slideEl = $(slideEl);\n      let progress = $slideEl[0].progress;\n\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n\n      createSlideShadows($slideEl, progress, params);\n    });\n  };\n\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (params.slideShadows) {\n        createSlideShadows($slideEl, progress, params);\n      }\n\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(transform);\n    }\n  };\n\n  const setTransition = duration => {\n    const {\n      transformEl\n    } = swiper.params.flipEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformEl\n    });\n  };\n\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}