{"ast":null,"code":"export default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid,\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    } // Normalize slideIndex\n\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  } // Get real index\n\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n  Object.assign(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","map":{"version":3,"names":["updateActiveIndex","newActiveIndex","swiper","translate","rtlTranslate","slidesGrid","snapGrid","params","activeIndex","previousIndex","realIndex","previousRealIndex","snapIndex","previousSnapIndex","i","length","normalizeSlideIndex","indexOf","skip","Math","min","slidesPerGroupSkip","floor","slidesPerGroup","emit","parseInt","slides","eq","attr","Object","assign","initialized","runCallbacksOnInit"],"sources":["/home/tecorb/Desktop/project/tailwind-css-project/parabel/node_modules/swiper/core/update/updateActiveIndex.js"],"sourcesContent":["export default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid,\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    } // Normalize slideIndex\n\n\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n\n    return;\n  } // Get real index\n\n\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n  Object.assign(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}