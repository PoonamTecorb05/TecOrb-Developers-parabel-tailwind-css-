{"ast":null,"code":"import $ from '../../shared/dom.js';\nexport default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides.filter(el => parseInt(el.getAttribute('data-swiper-slide-index'), 10) === index)[0];\n    }\n    return swiper.slides.eq(index)[0];\n  }; // Find slides currently in view\n\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || $([])).each(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  } // Find new height from highest slide in view\n\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  } // Update Height\n\n  if (newHeight || newHeight === 0) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}","map":{"version":3,"names":["$","updateAutoHeight","speed","swiper","activeSlides","isVirtual","virtual","params","enabled","newHeight","i","setTransition","getSlideByIndex","index","slides","filter","el","parseInt","getAttribute","eq","slidesPerView","centeredSlides","visibleSlides","each","slide","push","Math","ceil","activeIndex","length","height","offsetHeight","$wrapperEl","css"],"sources":["/home/tecorb/Desktop/project/tailwind-css-project/parabel/node_modules/swiper/core/update/updateAutoHeight.js"],"sourcesContent":["import $ from '../../shared/dom.js';\nexport default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides.filter(el => parseInt(el.getAttribute('data-swiper-slide-index'), 10) === index)[0];\n    }\n\n    return swiper.slides.eq(index)[0];\n  }; // Find slides currently in view\n\n\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || $([])).each(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  } // Find new height from highest slide in view\n\n\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  } // Update Height\n\n\n  if (newHeight || newHeight === 0) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}"],"mappings":"AAAA,OAAOA,CAAC,MAAM,qBAAqB;AACnC,eAAe,SAASC,gBAAgB,CAACC,KAAK,EAAE;EAC9C,MAAMC,MAAM,GAAG,IAAI;EACnB,MAAMC,YAAY,GAAG,EAAE;EACvB,MAAMC,SAAS,GAAGF,MAAM,CAACG,OAAO,IAAIH,MAAM,CAACI,MAAM,CAACD,OAAO,CAACE,OAAO;EACjE,IAAIC,SAAS,GAAG,CAAC;EACjB,IAAIC,CAAC;EAEL,IAAI,OAAOR,KAAK,KAAK,QAAQ,EAAE;IAC7BC,MAAM,CAACQ,aAAa,CAACT,KAAK,CAAC;EAC7B,CAAC,MAAM,IAAIA,KAAK,KAAK,IAAI,EAAE;IACzBC,MAAM,CAACQ,aAAa,CAACR,MAAM,CAACI,MAAM,CAACL,KAAK,CAAC;EAC3C;EAEA,MAAMU,eAAe,GAAGC,KAAK,IAAI;IAC/B,IAAIR,SAAS,EAAE;MACb,OAAOF,MAAM,CAACW,MAAM,CAACC,MAAM,CAACC,EAAE,IAAIC,QAAQ,CAACD,EAAE,CAACE,YAAY,CAAC,yBAAyB,CAAC,EAAE,EAAE,CAAC,KAAKL,KAAK,CAAC,CAAC,CAAC,CAAC;IAC1G;IAEA,OAAOV,MAAM,CAACW,MAAM,CAACK,EAAE,CAACN,KAAK,CAAC,CAAC,CAAC,CAAC;EACnC,CAAC,CAAC,CAAC;;EAGH,IAAIV,MAAM,CAACI,MAAM,CAACa,aAAa,KAAK,MAAM,IAAIjB,MAAM,CAACI,MAAM,CAACa,aAAa,GAAG,CAAC,EAAE;IAC7E,IAAIjB,MAAM,CAACI,MAAM,CAACc,cAAc,EAAE;MAChC,CAAClB,MAAM,CAACmB,aAAa,IAAItB,CAAC,CAAC,EAAE,CAAC,EAAEuB,IAAI,CAACC,KAAK,IAAI;QAC5CpB,YAAY,CAACqB,IAAI,CAACD,KAAK,CAAC;MAC1B,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,KAAKd,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgB,IAAI,CAACC,IAAI,CAACxB,MAAM,CAACI,MAAM,CAACa,aAAa,CAAC,EAAEV,CAAC,IAAI,CAAC,EAAE;QAC9D,MAAMG,KAAK,GAAGV,MAAM,CAACyB,WAAW,GAAGlB,CAAC;QACpC,IAAIG,KAAK,GAAGV,MAAM,CAACW,MAAM,CAACe,MAAM,IAAI,CAACxB,SAAS,EAAE;QAChDD,YAAY,CAACqB,IAAI,CAACb,eAAe,CAACC,KAAK,CAAC,CAAC;MAC3C;IACF;EACF,CAAC,MAAM;IACLT,YAAY,CAACqB,IAAI,CAACb,eAAe,CAACT,MAAM,CAACyB,WAAW,CAAC,CAAC;EACxD,CAAC,CAAC;;EAGF,KAAKlB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,YAAY,CAACyB,MAAM,EAAEnB,CAAC,IAAI,CAAC,EAAE;IAC3C,IAAI,OAAON,YAAY,CAACM,CAAC,CAAC,KAAK,WAAW,EAAE;MAC1C,MAAMoB,MAAM,GAAG1B,YAAY,CAACM,CAAC,CAAC,CAACqB,YAAY;MAC3CtB,SAAS,GAAGqB,MAAM,GAAGrB,SAAS,GAAGqB,MAAM,GAAGrB,SAAS;IACrD;EACF,CAAC,CAAC;;EAGF,IAAIA,SAAS,IAAIA,SAAS,KAAK,CAAC,EAAEN,MAAM,CAAC6B,UAAU,CAACC,GAAG,CAAC,QAAQ,EAAG,GAAExB,SAAU,IAAG,CAAC;AACrF"},"metadata":{},"sourceType":"module","externalDependencies":[]}