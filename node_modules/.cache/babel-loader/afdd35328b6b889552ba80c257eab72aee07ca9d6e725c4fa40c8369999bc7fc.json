{"ast":null,"code":"function e() {\n  let n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let t = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  for (let [i, o] of Object.entries(n)) f(t, s(r, i), o);\n  return t;\n}\nfunction s(n, r) {\n  return n ? n + \"[\" + r + \"]\" : r;\n}\nfunction f(n, r, t) {\n  if (Array.isArray(t)) for (let [i, o] of t.entries()) f(n, s(r, i.toString()), o);else t instanceof Date ? n.push([r, t.toISOString()]) : typeof t == \"boolean\" ? n.push([r, t ? \"1\" : \"0\"]) : typeof t == \"string\" ? n.push([r, t]) : typeof t == \"number\" ? n.push([r, `${t}`]) : t == null ? n.push([r, \"\"]) : e(t, r, n);\n}\nfunction p(n) {\n  var t;\n  let r = (t = n == null ? void 0 : n.form) != null ? t : n.closest(\"form\");\n  if (!!r) {\n    for (let i of r.elements) if (i.tagName === \"INPUT\" && i.type === \"submit\" || i.tagName === \"BUTTON\" && i.type === \"submit\" || i.nodeName === \"INPUT\" && i.type === \"image\") {\n      i.click();\n      return;\n    }\n  }\n}\nexport { p as attemptSubmit, e as objectToFormEntries };","map":{"version":3,"names":["e","n","r","t","i","o","Object","entries","f","s","Array","isArray","toString","Date","push","toISOString","p","form","closest","elements","tagName","type","nodeName","click","attemptSubmit","objectToFormEntries"],"sources":["/home/tecorb/Desktop/project/tailwind-css-project/parabel/node_modules/@headlessui/react/dist/utils/form.js"],"sourcesContent":["function e(n={},r=null,t=[]){for(let[i,o]of Object.entries(n))f(t,s(r,i),o);return t}function s(n,r){return n?n+\"[\"+r+\"]\":r}function f(n,r,t){if(Array.isArray(t))for(let[i,o]of t.entries())f(n,s(r,i.toString()),o);else t instanceof Date?n.push([r,t.toISOString()]):typeof t==\"boolean\"?n.push([r,t?\"1\":\"0\"]):typeof t==\"string\"?n.push([r,t]):typeof t==\"number\"?n.push([r,`${t}`]):t==null?n.push([r,\"\"]):e(t,r,n)}function p(n){var t;let r=(t=n==null?void 0:n.form)!=null?t:n.closest(\"form\");if(!!r){for(let i of r.elements)if(i.tagName===\"INPUT\"&&i.type===\"submit\"||i.tagName===\"BUTTON\"&&i.type===\"submit\"||i.nodeName===\"INPUT\"&&i.type===\"image\"){i.click();return}}}export{p as attemptSubmit,e as objectToFormEntries};\n"],"mappings":"AAAA,SAASA,CAAC,GAAkB;EAAA,IAAjBC,CAAC,uEAAC,CAAC,CAAC;EAAA,IAACC,CAAC,uEAAC,IAAI;EAAA,IAACC,CAAC,uEAAC,EAAE;EAAE,KAAI,IAAG,CAACC,CAAC,EAACC,CAAC,CAAC,IAAGC,MAAM,CAACC,OAAO,CAACN,CAAC,CAAC,EAACO,CAAC,CAACL,CAAC,EAACM,CAAC,CAACP,CAAC,EAACE,CAAC,CAAC,EAACC,CAAC,CAAC;EAAC,OAAOF,CAAC;AAAA;AAAC,SAASM,CAAC,CAACR,CAAC,EAACC,CAAC,EAAC;EAAC,OAAOD,CAAC,GAACA,CAAC,GAAC,GAAG,GAACC,CAAC,GAAC,GAAG,GAACA,CAAC;AAAA;AAAC,SAASM,CAAC,CAACP,CAAC,EAACC,CAAC,EAACC,CAAC,EAAC;EAAC,IAAGO,KAAK,CAACC,OAAO,CAACR,CAAC,CAAC,EAAC,KAAI,IAAG,CAACC,CAAC,EAACC,CAAC,CAAC,IAAGF,CAAC,CAACI,OAAO,EAAE,EAACC,CAAC,CAACP,CAAC,EAACQ,CAAC,CAACP,CAAC,EAACE,CAAC,CAACQ,QAAQ,EAAE,CAAC,EAACP,CAAC,CAAC,CAAC,KAAKF,CAAC,YAAYU,IAAI,GAACZ,CAAC,CAACa,IAAI,CAAC,CAACZ,CAAC,EAACC,CAAC,CAACY,WAAW,EAAE,CAAC,CAAC,GAAC,OAAOZ,CAAC,IAAE,SAAS,GAACF,CAAC,CAACa,IAAI,CAAC,CAACZ,CAAC,EAACC,CAAC,GAAC,GAAG,GAAC,GAAG,CAAC,CAAC,GAAC,OAAOA,CAAC,IAAE,QAAQ,GAACF,CAAC,CAACa,IAAI,CAAC,CAACZ,CAAC,EAACC,CAAC,CAAC,CAAC,GAAC,OAAOA,CAAC,IAAE,QAAQ,GAACF,CAAC,CAACa,IAAI,CAAC,CAACZ,CAAC,EAAE,GAAEC,CAAE,EAAC,CAAC,CAAC,GAACA,CAAC,IAAE,IAAI,GAACF,CAAC,CAACa,IAAI,CAAC,CAACZ,CAAC,EAAC,EAAE,CAAC,CAAC,GAACF,CAAC,CAACG,CAAC,EAACD,CAAC,EAACD,CAAC,CAAC;AAAA;AAAC,SAASe,CAAC,CAACf,CAAC,EAAC;EAAC,IAAIE,CAAC;EAAC,IAAID,CAAC,GAAC,CAACC,CAAC,GAACF,CAAC,IAAE,IAAI,GAAC,KAAK,CAAC,GAACA,CAAC,CAACgB,IAAI,KAAG,IAAI,GAACd,CAAC,GAACF,CAAC,CAACiB,OAAO,CAAC,MAAM,CAAC;EAAC,IAAG,CAAC,CAAChB,CAAC,EAAC;IAAC,KAAI,IAAIE,CAAC,IAAIF,CAAC,CAACiB,QAAQ,EAAC,IAAGf,CAAC,CAACgB,OAAO,KAAG,OAAO,IAAEhB,CAAC,CAACiB,IAAI,KAAG,QAAQ,IAAEjB,CAAC,CAACgB,OAAO,KAAG,QAAQ,IAAEhB,CAAC,CAACiB,IAAI,KAAG,QAAQ,IAAEjB,CAAC,CAACkB,QAAQ,KAAG,OAAO,IAAElB,CAAC,CAACiB,IAAI,KAAG,OAAO,EAAC;MAACjB,CAAC,CAACmB,KAAK,EAAE;MAAC;IAAM;EAAC;AAAC;AAAC,SAAOP,CAAC,IAAIQ,aAAa,EAACxB,CAAC,IAAIyB,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}