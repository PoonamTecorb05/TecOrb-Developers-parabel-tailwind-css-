{"ast":null,"code":"import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nexport default function EffectCoverflow(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true,\n      transformEl: null\n    }\n  });\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth; // Each slide offset from center\n\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier; // var rotateZ = 0\n\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch; // Allow percentage to make a relative stretch for responsive sliders\n\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier); // Fix for ultra small values\n\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = createShadow(params, $slideEl, isHorizontal ? 'left' : 'top');\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = createShadow(params, $slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const {\n      transformEl\n    } = swiper.params.coverflowEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n  };\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}","map":{"version":3,"names":["createShadow","effectInit","effectTarget","EffectCoverflow","swiper","extendParams","on","coverflowEffect","rotate","stretch","depth","scale","modifier","slideShadows","transformEl","setTranslate","width","swiperWidth","height","swiperHeight","slides","slidesSizesGrid","params","isHorizontal","transform","translate","center","i","length","$slideEl","eq","slideSize","slideOffset","swiperSlideOffset","centerOffset","offsetMultiplier","rotateY","rotateX","translateZ","Math","abs","indexOf","parseFloat","translateY","translateX","slideTransform","$targetEl","style","zIndex","round","$shadowBeforeEl","find","$shadowAfterEl","opacity","setTransition","duration","$transitionElements","transition","effect","perspective","overwriteParams","watchSlidesProgress"],"sources":["/home/tecorb/Desktop/project/tailwind-css-project/parabel/node_modules/swiper/modules/effect-coverflow/effect-coverflow.js"],"sourcesContent":["import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nexport default function EffectCoverflow({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true,\n      transformEl: null\n    }\n  });\n\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth; // Each slide offset from center\n\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier; // var rotateZ = 0\n\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch; // Allow percentage to make a relative stretch for responsive sliders\n\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier); // Fix for ultra small values\n\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = createShadow(params, $slideEl, isHorizontal ? 'left' : 'top');\n        }\n\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = createShadow(params, $slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n\n  const setTransition = duration => {\n    const {\n      transformEl\n    } = swiper.params.coverflowEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n  };\n\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}