{"ast":null,"code":"import { extend } from '../../shared/utils.js';\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    activeIndex,\n    initialized,\n    loopedSlides = 0,\n    params,\n    $el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Get breakpoint for window width and update parameters\n\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    $el.removeClass(`${params.containerModifierClass}grid ${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    $el.addClass(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      $el.addClass(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  } // Toggle navigation, pagination, scrollbar\n\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate();\n    swiper.updateSlides();\n    swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}","map":{"version":3,"names":["extend","isGridEnabled","swiper","params","grid","rows","setBreakpoint","activeIndex","initialized","loopedSlides","$el","breakpoints","Object","keys","length","breakpoint","getBreakpoint","breakpointsBase","el","currentBreakpoint","breakpointOnlyParams","undefined","breakpointParams","originalParams","wasMultiRow","isMultiRow","wasEnabled","enabled","removeClass","containerModifierClass","emitContainerClasses","addClass","fill","forEach","prop","wasModuleEnabled","isModuleEnabled","disable","enable","directionChanged","direction","needsReLoop","loop","slidesPerView","changeDirection","isEnabled","assign","allowTouchMove","allowSlideNext","allowSlidePrev","emit","loopDestroy","loopCreate","updateSlides","slideTo"],"sources":["/home/tecorb/Desktop/project/tailwind-css-project/parabel/node_modules/swiper/core/breakpoints/setBreakpoint.js"],"sourcesContent":["import { extend } from '../../shared/utils.js';\n\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\n\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    activeIndex,\n    initialized,\n    loopedSlides = 0,\n    params,\n    $el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Get breakpoint for window width and update parameters\n\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n\n  if (wasMultiRow && !isMultiRow) {\n    $el.removeClass(`${params.containerModifierClass}grid ${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    $el.addClass(`${params.containerModifierClass}grid`);\n\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      $el.addClass(`${params.containerModifierClass}grid-column`);\n    }\n\n    swiper.emitContainerClasses();\n  } // Toggle navigation, pagination, scrollbar\n\n\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate();\n    swiper.updateSlides();\n    swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\n  }\n\n  swiper.emit('breakpoint', breakpointParams);\n}"],"mappings":"AAAA,SAASA,MAAM,QAAQ,uBAAuB;AAE9C,MAAMC,aAAa,GAAG,CAACC,MAAM,EAAEC,MAAM,KAAK;EACxC,OAAOD,MAAM,CAACE,IAAI,IAAID,MAAM,CAACC,IAAI,IAAID,MAAM,CAACC,IAAI,CAACC,IAAI,GAAG,CAAC;AAC3D,CAAC;AAED,eAAe,SAASC,aAAa,GAAG;EACtC,MAAMJ,MAAM,GAAG,IAAI;EACnB,MAAM;IACJK,WAAW;IACXC,WAAW;IACXC,YAAY,GAAG,CAAC;IAChBN,MAAM;IACNO;EACF,CAAC,GAAGR,MAAM;EACV,MAAMS,WAAW,GAAGR,MAAM,CAACQ,WAAW;EACtC,IAAI,CAACA,WAAW,IAAIA,WAAW,IAAIC,MAAM,CAACC,IAAI,CAACF,WAAW,CAAC,CAACG,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC;;EAElF,MAAMC,UAAU,GAAGb,MAAM,CAACc,aAAa,CAACL,WAAW,EAAET,MAAM,CAACC,MAAM,CAACc,eAAe,EAAEf,MAAM,CAACgB,EAAE,CAAC;EAC9F,IAAI,CAACH,UAAU,IAAIb,MAAM,CAACiB,iBAAiB,KAAKJ,UAAU,EAAE;EAC5D,MAAMK,oBAAoB,GAAGL,UAAU,IAAIJ,WAAW,GAAGA,WAAW,CAACI,UAAU,CAAC,GAAGM,SAAS;EAC5F,MAAMC,gBAAgB,GAAGF,oBAAoB,IAAIlB,MAAM,CAACqB,cAAc;EACtE,MAAMC,WAAW,GAAGvB,aAAa,CAACC,MAAM,EAAEC,MAAM,CAAC;EACjD,MAAMsB,UAAU,GAAGxB,aAAa,CAACC,MAAM,EAAEoB,gBAAgB,CAAC;EAC1D,MAAMI,UAAU,GAAGvB,MAAM,CAACwB,OAAO;EAEjC,IAAIH,WAAW,IAAI,CAACC,UAAU,EAAE;IAC9Bf,GAAG,CAACkB,WAAW,CAAE,GAAEzB,MAAM,CAAC0B,sBAAuB,QAAO1B,MAAM,CAAC0B,sBAAuB,aAAY,CAAC;IACnG3B,MAAM,CAAC4B,oBAAoB,EAAE;EAC/B,CAAC,MAAM,IAAI,CAACN,WAAW,IAAIC,UAAU,EAAE;IACrCf,GAAG,CAACqB,QAAQ,CAAE,GAAE5B,MAAM,CAAC0B,sBAAuB,MAAK,CAAC;IAEpD,IAAIP,gBAAgB,CAAClB,IAAI,CAAC4B,IAAI,IAAIV,gBAAgB,CAAClB,IAAI,CAAC4B,IAAI,KAAK,QAAQ,IAAI,CAACV,gBAAgB,CAAClB,IAAI,CAAC4B,IAAI,IAAI7B,MAAM,CAACC,IAAI,CAAC4B,IAAI,KAAK,QAAQ,EAAE;MACzItB,GAAG,CAACqB,QAAQ,CAAE,GAAE5B,MAAM,CAAC0B,sBAAuB,aAAY,CAAC;IAC7D;IAEA3B,MAAM,CAAC4B,oBAAoB,EAAE;EAC/B,CAAC,CAAC;;EAGF,CAAC,YAAY,EAAE,YAAY,EAAE,WAAW,CAAC,CAACG,OAAO,CAACC,IAAI,IAAI;IACxD,MAAMC,gBAAgB,GAAGhC,MAAM,CAAC+B,IAAI,CAAC,IAAI/B,MAAM,CAAC+B,IAAI,CAAC,CAACP,OAAO;IAC7D,MAAMS,eAAe,GAAGd,gBAAgB,CAACY,IAAI,CAAC,IAAIZ,gBAAgB,CAACY,IAAI,CAAC,CAACP,OAAO;IAEhF,IAAIQ,gBAAgB,IAAI,CAACC,eAAe,EAAE;MACxClC,MAAM,CAACgC,IAAI,CAAC,CAACG,OAAO,EAAE;IACxB;IAEA,IAAI,CAACF,gBAAgB,IAAIC,eAAe,EAAE;MACxClC,MAAM,CAACgC,IAAI,CAAC,CAACI,MAAM,EAAE;IACvB;EACF,CAAC,CAAC;EACF,MAAMC,gBAAgB,GAAGjB,gBAAgB,CAACkB,SAAS,IAAIlB,gBAAgB,CAACkB,SAAS,KAAKrC,MAAM,CAACqC,SAAS;EACtG,MAAMC,WAAW,GAAGtC,MAAM,CAACuC,IAAI,KAAKpB,gBAAgB,CAACqB,aAAa,KAAKxC,MAAM,CAACwC,aAAa,IAAIJ,gBAAgB,CAAC;EAEhH,IAAIA,gBAAgB,IAAI/B,WAAW,EAAE;IACnCN,MAAM,CAAC0C,eAAe,EAAE;EAC1B;EAEA5C,MAAM,CAACE,MAAM,CAACC,MAAM,EAAEmB,gBAAgB,CAAC;EACvC,MAAMuB,SAAS,GAAG3C,MAAM,CAACC,MAAM,CAACwB,OAAO;EACvCf,MAAM,CAACkC,MAAM,CAAC5C,MAAM,EAAE;IACpB6C,cAAc,EAAE7C,MAAM,CAACC,MAAM,CAAC4C,cAAc;IAC5CC,cAAc,EAAE9C,MAAM,CAACC,MAAM,CAAC6C,cAAc;IAC5CC,cAAc,EAAE/C,MAAM,CAACC,MAAM,CAAC8C;EAChC,CAAC,CAAC;EAEF,IAAIvB,UAAU,IAAI,CAACmB,SAAS,EAAE;IAC5B3C,MAAM,CAACmC,OAAO,EAAE;EAClB,CAAC,MAAM,IAAI,CAACX,UAAU,IAAImB,SAAS,EAAE;IACnC3C,MAAM,CAACoC,MAAM,EAAE;EACjB;EAEApC,MAAM,CAACiB,iBAAiB,GAAGJ,UAAU;EACrCb,MAAM,CAACgD,IAAI,CAAC,mBAAmB,EAAE5B,gBAAgB,CAAC;EAElD,IAAImB,WAAW,IAAIjC,WAAW,EAAE;IAC9BN,MAAM,CAACiD,WAAW,EAAE;IACpBjD,MAAM,CAACkD,UAAU,EAAE;IACnBlD,MAAM,CAACmD,YAAY,EAAE;IACrBnD,MAAM,CAACoD,OAAO,CAAC/C,WAAW,GAAGE,YAAY,GAAGP,MAAM,CAACO,YAAY,EAAE,CAAC,EAAE,KAAK,CAAC;EAC5E;EAEAP,MAAM,CAACgD,IAAI,CAAC,YAAY,EAAE5B,gBAAgB,CAAC;AAC7C"},"metadata":{},"sourceType":"module","externalDependencies":[]}